using Microsoft.Data.SqlClient;
using System.Data;

namespace _44Disconnected
{
    internal class Program
    {
        static void Main(string[] args)
        {
            string conStr = "Data Source=(LocalDB)\\MSSQLLocalDB;Initial Catalog=IETDb;Integrated Security=True";

            #region Select Records
            //SqlConnection con = new SqlConnection(conStr);
            //SqlDataAdapter da = new SqlDataAdapter("SELECT * FROM Emp", con);
            //da.MissingSchemaAction = MissingSchemaAction.AddWithKey;

            //DataSet ds = new DataSet();

            //da.Fill(ds, "Emp");

            //da.Fill(ds,"Employee");

            //ds.WriteXml("Emp.xml", XmlWriteMode.WriteSchema);

            //var tb = ds.Tables["Emp"];

            //foreach (DataRow row in tb.Rows)
            //{
            //    int id = Convert.ToInt32(row["Id"]);
            //    string name = row["Name"].ToString();
            //    string address = row["Address"].ToString();
            //    Console.WriteLine($"Id = {id}, Name = {name}, Address = {address}");
            //}


            //Console.WriteLine("done"); 
            #endregion

            #region Insert Records
            //SqlConnection con = new SqlConnection(conStr);
            //SqlDataAdapter da = new SqlDataAdapter("SELECT * FROM Emp", con);
            //da.MissingSchemaAction = MissingSchemaAction.AddWithKey;
            //SqlCommandBuilder cb = new SqlCommandBuilder(da);
            //DataSet ds = new DataSet();

            //da.Fill(ds, "Emp");

            //Console.WriteLine("Enter name :");
            //string name = Console.ReadLine();
            //Console.WriteLine("Enter address :");
            //string address = Console.ReadLine();

            //DataRow row = ds.Tables["Emp"].NewRow();
            //row["Name"] = name;
            //row["Address"] = address;

            //ds.Tables["Emp"].Rows.Add(row);

            //da.Update(ds, "Emp"); //Insert Query is generated by CommandBuilder
            //Console.WriteLine("Insert record done!"); 
            #endregion


            #region Update Records

            // SqlConnection con = new SqlConnection(conStr);
            // SqlDataAdapter da = new SqlDataAdapter("SELECT * FROM Emp", con);
            // da.MissingSchemaAction = MissingSchemaAction.AddWithKey;
            // SqlCommandBuilder cb = new SqlCommandBuilder(da);
            // DataSet ds = new DataSet();

            // da.Fill(ds, "Emp");

            // Console.WriteLine("Enter id to be updated :");
            //int id =Convert.ToInt32(Console.ReadLine());
            // Console.WriteLine("Enter name to be updated :");
            // string name = Console.ReadLine();
            // Console.WriteLine("Enter address to be updated :");
            // string address = Console.ReadLine();

            // DataRow row = ds.Tables["Emp"].Rows.Find(id);

            // row["Name"] = name;
            // row["Address"] = address;

            // da.Update(ds, "Emp"); //Update Query is generated by CommandBuilder
            // Console.WriteLine("Update record done!");

            #endregion

            #region Delete Query
            //SqlConnection con = new SqlConnection(conStr);
            //SqlDataAdapter da = new SqlDataAdapter("SELECT * FROM Emp", con);
            //da.MissingSchemaAction = MissingSchemaAction.AddWithKey;
            //SqlCommandBuilder cb = new SqlCommandBuilder(da);
            //DataSet ds = new DataSet();

            //da.Fill(ds, "Emp");

            //Console.WriteLine("Enter id to be deleted :");
            //int id = Convert.ToInt32(Console.ReadLine());

            //DataRow row = ds.Tables["Emp"].Rows.Find(id);
            //ds.Tables["Emp"].Rows.Remove(row);

            //da.Update(ds, "Emp"); //Delete Query is generated by CommandBuilder
            //Console.WriteLine("Delete record done!");
            #endregion
        }
    }
}
